---
title: <center><font size="7"><b>Branchwise rates results</b></font></center>
subtitle: <center><font size="5"><b><a href="https://github.com/maRce10/hummingbird_song_evolution">Hummingbird song evolution</a></b></font></center>
author: <center><font size="4"><a href="http://marceloarayasalas.weebly.com/">Marcelo Araya-Salas, PhD</a></font></center>
date: <center>`r format(Sys.Date(), "%d-%m-%Y")`</center>
output:
  html_document:
    code_folding: hide
    toc: yes
    toc_depth: 3
    toc_float:
      collapsed: yes
      smooth_scroll: no
fontsize: 12pt 
editor_options: 
  chunk_output_type: console
---

### Load packages
```{r packages, message=FALSE, warning = FALSE, eval = TRUE}

rm(list = ls())

# unload all non-based packages
out <- sapply(paste('package:', names(sessionInfo()$otherPkgs), sep = ""), function(x) try(detach(x, unload = FALSE, character.only = TRUE), silent = T))

## add 'developer/' to packages to be installed from github
x <- c(
  "ggtree",
  "ape",
  "viridis",
  "readxl",
  "ggplot2",
  "leaflet"
    )
  
out <- lapply(x, function(y) {
  # get pakage name
  pkg <- strsplit(y, "/")[[1]]
  pkg <- pkg[length(pkg)]
  
  # check if installed, if not then install
  if (!pkg %in% installed.packages()[, "Package"])  {
  if (grepl("/", y))
  devtools::install_github(y, force = TRUE)
  else
  install.packages(y)
  }
  
  # load package
  try(require(pkg, character.only = T), silent = T)
})

knitr::opts_knit$set(root.dir = normalizePath(".."))

knitr::opts_chunk$set(dpi = 58, fig.width = 14, fig.height = 16)

```

### Set parameters and read data
```{r functions and parameters, message = FALSE, warning = FALSE, eval = TRUE}

# font size of clade labels
fontsize <- 13

# edge width
lwd <- 2

# make any numeric variable within a specific range 
range01 <- function(x, min = 0, max = 1){
  x <- x + min(x)
  x <- (x-min(x))/(max(x)-min(x))

  x <- x * (max - min)
  
  x <- x + min
  
  return(x)
  }

# ggplot2 theme
theme_set(theme_classic(base_size = 14,base_family = "Arial"))

# main tree
phy <- read.nexus("data/processed/trees/ConsensoBayesTraits.trees")

phy <- rotateConstr(phy = phy, constraint = rev(phy$tip))

phy <- ladderize(phy)


# read branchwise rates
xls <- list.files(path = "./output/bayestraits", full.names = TRUE, pattern = "\\.xls")

# get branchwise rates into a list
branchwise_rates <- lapply(xls, function(x) {

  X <- as.data.frame(read_excel(x))
  
  X$variable <- gsub("BranchWiseRate_|BranchWiseRates_|.xlsx", "", basename(x))
  
  # get the ones with r == 1 (r != 1 means significantly different than background rate)
  X$log.r <- log(X$`Median Scalar (r)` + 1)

  names(X)[7] <- "Optimized Rate (r * backgroundrate)"

  domain <- range(0, 1)
  
  
  pal_fun <- colorNumeric(palette = "magma", domain = domain, reverse = TRUE)
  
    # previewColors(pal_fun, seq(min(domain), max(domain), length.out = 30))

  X$r.for.color <- NA
  
  # color range for low rates
  X$r.for.color[X$`Optimized Rate (r * backgroundrate)`< X$`Background Rate (per million year)`] <- range01(X$log.r[X$`Optimized Rate (r * backgroundrate)`< X$`Background Rate (per million year)`], min = 0.7, max = 0.8)
  
  # color range for high rates
  X$r.for.color[X$`Optimized Rate (r * backgroundrate)`> X$`Background Rate (per million year)`] <- range01(X$log.r[X$`Optimized Rate (r * backgroundrate)`> X$`Background Rate (per million year)`], min = 0.1, max = 0.5)
 
  X$rate.color <- "gray"
  
  X$rate.color <- pal_fun(X$r.for.color)
  
  # get gray the ones with less than 95% of time under background rate 
  X$rate.color[X$`Percentage time scaled`< 95] <- "gray"
  
  return(X)
  })

# names(branchwise_rates) <-  gsub("BranchWiseRate_|BranchWiseRates_|.xlsx", "", basename(xls))

names(branchwise_rates) <- c("Sequence complexity", "# of element types", "Acoustic space", "Between song variation")
# put branchwise rates in a single data frame

phy.btw.sng.vr <- drop.tip(phy, tip = setdiff(phy$tip.label, branchwise_rates$`Between song variation`$`Taxa List`[branchwise_rates$`Between song variation`$`No Taxa` == 1]))

# ggplot2 theme
theme_set(theme_tree2(base_size = 14,base_family = "Arial"))

# song acoustic parameters
song.acoust.param <- read.csv("data/processed/acoustic/Song parameters nightjars swifts and hummingbirds.csv", stringsAsFactors = FALSE)

song.acoust.param$species <- song.acoust.param$species_uscr

sp.clade <- song.acoust.param[!duplicated(song.acoust.param$species) , c("species", "Clade")]

# rename hummers
sp.clade$maj.clade <- ifelse(sp.clade$Clade %in% c("Nightjars", "Swifts"), sp.clade$Clade, "Hummingbirds")

# all clades Except for Patagona
all.clade.nodes <- sapply(c("Emeralds", "Coquettes", "Swifts", "Brilliants", "Mangoes", "Hermits", "Nightjars", "Bees", "Mtn. Gems", "Topazes", "Hummingbirds"), function(x) getMRCA(phy = phy, tip = if(x == "Hummingbirds") sp.clade$species[!sp.clade$Clade %in% c("Swifts", "Nightjars")] else sp.clade$species[sp.clade$Clade == x]))

sp.clade.bsv  <- sp.clade[sp.clade$species %in%  phy.btw.sng.vr$tip.label, ]

# all clades Except for Patagona for between song variation
all.clade.nodes.bsv <- sapply(c("Emeralds", "Coquettes", "Swifts", "Brilliants", "Mangoes", "Hermits", "Nightjars", "Bees", "Mtn. Gems", "Topazes", "Hummingbirds"), function(x) getMRCA(phy = phy.btw.sng.vr, tip = if(x == "Hummingbirds") sp.clade.bsv$species[!sp.clade.bsv$Clade %in% c("Swifts", "Nightjars")] else sp.clade.bsv$species[sp.clade.bsv$Clade == x]))

# MRCAs for major clades
major.clade.nodes <- sapply(c("Nightjars", "Swifts", "Hummingbirds"), function(x) getMRCA(phy = phy, tip = sp.clade$species[sp.clade$maj.clade == x]))

# MRCAs for major clades for between song variation
major.clade.nodes.bsv <- sapply(c("Nightjars", "Swifts", "Hummingbirds"), function(x) getMRCA(phy = phy.btw.sng.vr, tip = sp.clade.bsv$species[sp.clade.bsv$maj.clade == x]))

# hummingbirds only tree
hmm.tree <- drop.tip(phy, tip = sp.clade$species[sp.clade$maj.clade != "Hummingbirds"])

# hummingbirds only tree for between song variation
hmm.tree.bsv <- drop.tip(phy.btw.sng.vr, tip = sp.clade.bsv$species[sp.clade.bsv$maj.clade != "Hummingbirds"])

# MRCAs for hummingbird subclade (excluding Patagona)
hmm.clade.nodes <- sapply(unique(sp.clade$Clade[!sp.clade$Clade %in% c("Patagona", "Nightjars", "Swifts")]), function(x) getMRCA(phy = hmm.tree, tip = sp.clade$species[sp.clade$Clade == x]))

hmm.clade.nodes <- hmm.clade.nodes[order(names(hmm.clade.nodes))]

# MRCAs for hummingbird subclade (excluding Patagona) for btween song variation
hmm.clade.nodes.bsv <- sapply(unique(sp.clade.bsv$Clade[!sp.clade.bsv$Clade %in% c("Patagona", "Nightjars", "Swifts")]), function(x) getMRCA(phy = hmm.tree.bsv, tip = sp.clade.bsv$species[sp.clade.bsv$Clade == x]))

hmm.clade.nodes.bsv <- hmm.clade.nodes.bsv[order(names(hmm.clade.nodes.bsv))]

# base ggtree graph major clades  
gg.maj.clades <- ggtree(phy, ladderize = FALSE, size = lwd) +
  theme_tree2() +  xlim(NA, 150) + 
  theme(text=element_text(size = 35)) + labs(x = "Millions of years")
  

# add clade labels
    for(i in 1:length(all.clade.nodes))
  gg.maj.clades <- gg.maj.clades + geom_cladelabel(node = all.clade.nodes[i], label = names(all.clade.nodes)[i],   fontsize = fontsize, align=TRUE, barsize = 2, offset = if(names(all.clade.nodes)[i] == "Hummingbirds") 33 else 0.7, color = if(names(all.clade.nodes)[i] == "Hummingbirds") "gray81" else "gray45")
  
# gg.maj.clades

# base ggtree graph major clades for between song variation
gg.maj.clades.bsv <- ggtree(phy.btw.sng.vr, ladderize = FALSE, size = lwd) +
  theme_tree2() +  xlim(NA, 150) + 
  theme(text=element_text(size = 35))

# add labels
    for(i in 1:length(all.clade.nodes.bsv))
  gg.maj.clades.bsv <- gg.maj.clades.bsv + geom_cladelabel(node = all.clade.nodes.bsv[i], label = names(all.clade.nodes.bsv)[i],   fontsize = fontsize, align=TRUE, barsize = 2, offset = if(names(all.clade.nodes.bsv)[i] == "Hummingbirds") 33 else 0.7, color = if(names(all.clade.nodes.bsv)[i] == "Hummingbirds") "gray81" else "gray45")


# base ggtree graph hummingbird clades  
gg.hmm.clades <- ggtree(hmm.tree, ladderize = FALSE, size = lwd) +
  theme_tree2() + xlim(NA, 30) + 
  theme(text=element_text(size = 20))
  
# color clades
  for(i in 1:length(hmm.clade.nodes))
  gg.hmm.clades <- gg.hmm.clades + geom_cladelabel(node = hmm.clade.nodes[i], label = names(hmm.clade.nodes)[i],   fontsize = fontsize, align=TRUE)

# base ggtree graph hummingbird clades for between song variation
gg.hmm.clades.bsv <- ggtree(hmm.tree.bsv, ladderize = FALSE, size = lwd) +
  theme_tree2() + xlim(NA, 30) + 
  theme(text=element_text(size = 20))
  
# color clades
  for(i in 1:length(hmm.clade.nodes.bsv))
  gg.hmm.clades.bsv <- gg.hmm.clades.bsv + geom_cladelabel(node = hmm.clade.nodes.bsv[i], label = names(hmm.clade.nodes.bsv)[i],   fontsize = fontsize, align=TRUE, size = 2)

# tree with 3 tips for the 3 major clades
major.clade.collapse.tree <- drop.tip(phy, tip = setdiff(phy$tip.label, sp.clade$species[!duplicated(sp.clade$maj.clade)]))

# rename tips
major.clade.collapse.tree$tip.label <- c("Nightjars", "Swifts", "Hummingbirds")

# base ggtree graph major clades  
gg.major.clade.collapse.tree <- ggtree(major.clade.collapse.tree, ladderize = FALSE, size = lwd) +
  theme_tree2() + 
  theme(text=element_text(size = 20))

# add labels to tips
gg.major.clade.collapse.tree <- gg.major.clade.collapse.tree +
  geom_label(aes(label = label), hjust = 1, size = 7) 

### tree with 8  tips for hummer clades
hmm.clade.collapse.tree <- drop.tip(hmm.tree, tip = c(setdiff(hmm.tree$tip.label, sp.clade$species[!duplicated(sp.clade$Clade)]), "Patagona_gigas"))

# rename tips
hmm.clade.collapse.tree$tip.label <- c("Hermits", "Topazes", "Mangoes", "Emeralds", "Mtn. Gems", "Bees", "Brilliants", "Coquettes")

# base ggtree graph major clades  
gg.hmm.clade.collapse.tree <- ggtree(hmm.clade.collapse.tree, ladderize = FALSE, size = lwd) +
  theme_tree2() + 
  theme(text=element_text(size = 20))

## add tip labels
gg.hmm.clade.collapse.tree <- gg.hmm.clade.collapse.tree +
  geom_label(aes(label = label), hjust = 1, size = 5) 

```


# Branchwhise evolutionary rates on song complexity parameters

- Warm colors: significantly faster than background brownian motion rates
- Warm colors: significantly slower than background brownian motion rates
- Significance determined as speding >= 95% of time at a rate higher than background


```{r branchwise coloring, message = FALSE, warning = FALSE, echo = TRUE, eval = TRUE}

ggtrs <- lapply(1:length(branchwise_rates), function(y){
  
  X <- branchwise_rates[[y]]
  
    X$node <- sapply(X$`Taxa List`, function(y) {
    
    tips <- strsplit(y, split = ",")[[1]]
    
    phytemp <- if (X$variable[1] == "Btwn") phy.btw.sng.vr else phy
    
    node <- if (length(tips) == 1) which(phytemp$tip == tips) else
    getMRCA(phy = phytemp, tip = tips)
  })
  
    if (X$variable[1] != "Btwn")
  gg.maj.clades %<+% X + aes(color=I(rate.color))  else
    gg.maj.clades.bsv %<+% X + aes(color=I(rate.color))
  # + ggtitle(X$variable[1])
  
})

names(ggtrs) <- names(branchwise_rates)

```


# Sequence complexity

```{r}

ggtrs$`Sequence complexity`

```

# Acoustic space

```{r}

ggtrs$`Acoustic space`

```

# Between song variation

```{r}

ggtrs$`Between song variation`

```

# Number of elements per song

```{r}

ggtrs$`# of element types`

```

---

<font size="5">Session information</font>

```{r session info, echo=F}

sessionInfo()


```
