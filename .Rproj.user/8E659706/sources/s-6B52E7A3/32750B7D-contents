---
title: <center><font size="7"><b>Branchwise rates results</b></font></center>
subtitle: <center><font size="4"><b>Hummingbird song evolution</b></font></center>
author: <center><font size="4"><a href="http://marceloarayasalas.weebly.com/">Marcelo Araya-Salas, PhD</a></font></center>
#date: <center>`r format(Sys.Date(), "%d-%m-%Y")`</center>
output:
  html_document:
    toc: yes
    toc_depth: 3
    toc_float:
      collapsed: no
      smooth_scroll: no
fontsize: 12pt 
editor_options: 
  chunk_output_type: console
---

```{r packages, message=FALSE, warning = FALSE, echo = FALSE, eval = TRUE, include = FALSE}

rm(list = ls())

# unload all non-based packages
out <- sapply(paste('package:', names(sessionInfo()$otherPkgs), sep = ""), function(x) try(detach(x, unload = FALSE, character.only = TRUE), silent = T))

## add 'developer/' to packages to be installed from github
x <- c(
  "ggtree",
  "ape",
  "viridis",
  "readxl",
  "ggplot2"
    )
  
out <- lapply(x, function(y) {
  # get pakage name
  pkg <- strsplit(y, "/")[[1]]
  pkg <- pkg[length(pkg)]
  
  # check if installed, if not then install
  if (!pkg %in% installed.packages()[, "Package"])  {
  if (grepl("/", y))
  devtools::install_github(y, force = TRUE)
  else
  install.packages(y)
  }
  
  # load package
  try(require(pkg, character.only = T), silent = T)
})

knitr::opts_knit$set(root.dir = normalizePath(".."))

knitr::opts_chunk$set(dpi = 58, fig.width = 12, fig.height = 12) 

```

```{r functions and parameters, message = FALSE, warning = FALSE, echo = FALSE, eval = TRUE}

cols <- magma(10)

# ggplot2 theme
theme_set(theme_classic(base_size = 14,base_family = "Arial"))

# main tree
phy <- read.tree("data/processed/trees/consensus_tree_swifts_hummingbirds_and_nighjars_max_cred.tree")

# read branchwise rates
xls <- list.files(path = "./output/bayestraits", full.names = TRUE)

# get branchwise rates into a list
branchwise_rates <- lapply(xls, function(x) {

  X <- as.data.frame(read_excel(x))
  
  X$variable <- gsub("BranchWiseRate_|BranchWiseRates_|.xlsx", "", basename(x))
  
  # get the ones with r == 1 (r != 1 means significantly different than background rate)
  X$log10.r <- log10(X$`Median Scalar (r)` + 1)

  names(X)[7] <- "Optimized Rate (r * backgroundrate)"

  X$rate.color <- ifelse(X$`Optimized Rate (r * backgroundrate)`< X$`Background Rate (per million year)`, cols[2], cols[9])
  
  X$rate.color[X$`Median Scalar (r)` == 1] <- "gray"
  
  X$node <- sapply(X$`Taxa List`, function(x) {
    
    tips <- strsplit(x, split = ",")[[1]]
    
    if (length(tips) == 1) tips <- c(tips, tips)

    getMRCA(phy = phy, tip = tips)

  })
  
  return(X)
  })

# names(branchwise_rates) <-  gsub("BranchWiseRate_|BranchWiseRates_|.xlsx", "", basename(xls))

names(branchwise_rates) <- c("PC1 complexity", "# of element types", "Acoustic space", "Between song variation")
# put branchwise rates in a single data frame
# df <- do.call(rbind, brachwise_rates)

getMRCA(phy = phy, tip = c("Chlorestes_notata", "Juliamyia_julie"))

getMRCA(phy = phy, tip = c("Amazilia_amabilis","Amazilia_decora"))

```

```{r ggtree branchwise coloring EXAMPLE, message = FALSE, warning = FALSE, echo = FALSE, eval = FALSE}

require(ggtree)

set.seed(123)
tr = rtree(30)

library(leaflet)

magma_pal <- colorNumeric("magma", domain = c(0, 1.5))

d <- data.frame(node=1:59, value = seq(0, 1,length.out =  59))

d$color <- magma_pal(d$value)

ggtree(tr) %<+% d + aes(color=I(color)) 

```

```{r branchwise coloring, message = FALSE, warning = FALSE, echo = FALSE, eval = TRUE}

ggtrs <- lapply(1:length(branchwise_rates), function(x){
  X <- branchwise_rates[[x]]
  
  # X$node <- X$`Node ID`
  
  setdiff(phy$tip.label, X$`Taxa List`[X$`No Taxa` == 1])
  
  phydrop <- drop.tip(phy, tip = setdiff(X$`Taxa List`[X$`No Taxa` == 1],phy$tip.label))
  
  ggtree(phydrop) %<+% X + aes(color=I(rate.color)) + ggtitle(X$variable[1])
  
})

names(ggtrs) <- names(branchwise_rates)

ggtrs

```




---

<font size="5">Session information</font>

```{r session info, echo=F}

sessionInfo()


```
