---
title: <center><font size="6"><b>Acoustic parameters mapped on phylogenies</b></font></center>
subtitle: <center><font size="5"><b>Hummingbird song evolution</b></font></center>
author: <center><font size="4"> Marcelo Araya-Salas</font></center>
date: <center>`r format(Sys.Date(), "%d-%m-%Y")`</center>
output:
  html_document:
    code_folding: hide
    toc: yes
    toc_depth: 2
    toc_float:
      collapsed: no
      smooth_scroll: no
fontsize: 12pt 
editor_options: 
  chunk_output_type: console
---

#### Loading packages
```{r packages, message=FALSE, warning = FALSE, echo = FALSE, eval = TRUE, include = FALSE}

#clean session
rm(list = ls())

# unload all non-based packages
out <- sapply(paste('package:', names(sessionInfo()$otherPkgs), sep = ""), function(x) try(detach(x, unload = FALSE, character.only = TRUE), silent = T))

## add 'developer/' to packages to be installed from github
x <- c("ggplot2", "viridis",  "kableExtra", "ape", "phytools",  "YuLab-SMU/ggtree", "cowplot")

aa <- lapply(x, function(y) {
  
  # get pakage name
  pkg <- strsplit(y, "/")[[1]]
  pkg <- pkg[length(pkg)]
  
  # check if installed, if not then install 
  if (!pkg %in% installed.packages()[,"Package"])  {

      if (grepl("/", y))  devtools::install_github(y, force = TRUE) else
    install.packages(y) 
    }

  # load package
  try(require(pkg, character.only = T), silent = T)
})

knitr::opts_knit$set(root.dir = normalizePath(".."))

knitr::opts_chunk$set(dpi = 100, fig.width = 14, fig.height = 14) 

```

#### Reading data and setting global parameters
```{r functions and parameters, eval = TRUE, echo = TRUE}

# color palette
cols <- viridis(10)

# ggplot2 theme
theme_set(theme_tree2(base_size = 14,base_family = "Arial"))

# main tree
hmm.swft.cpr.tree <- read.tree("data/processed/trees/consensus_tree_swifts_hummingbirds_and_nighjars_max_cred.tree")

## element acoustic parameters 
all.elm.acou.prm <- read.csv("data/processed/acoustic/Element parameters nighjars swifts and hummingbirds.csv", stringsAsFactors = FALSE)

all.elm.acou.prm$species <- gsub(" ", "_", all.elm.acou.prm$Species)

# song acoustic parameters
song.acoust.param <- read.csv("data/processed/acoustic/Song parameters nightjars swifts and hummingbirds.csv", stringsAsFactors = FALSE)

song.acoust.param$species <- song.acoust.param$species_uscr

# # complexity parameters
songs.complx.param <- read.csv("data/processed/acoustic/log10 songs complexity parameters nightjars swifts and hummingbirds.csv", stringsAsFactors = FALSE)

# formula for aggregating at the species level
frmla.elm <- as.formula(paste0("cbind(", paste(names(all.elm.acou.prm)[5:30], collapse = ", "), ") ~ species + Clade"))

frmla.sng <- as.formula(paste0("cbind(", paste(names(song.acoust.param)[c(11:35, 38:40)], collapse = ", "), ") ~ species + Clade"))

frmla.cmplx <- as.formula(paste0("cbind(", paste(names(songs.complx.param)[-1], collapse = ", "), ") ~ species + Clade"))

# aggregate all parameters
agg.elm.param.hmm <- agg.elm.param <- aggregate(frmla.elm, all.elm.acou.prm, mean)

agg.sng.param.hmm <- agg.sng.param <- aggregate(frmla.sng, song.acoust.param, mean)

songs.complx.param$Clade <- sapply(songs.complx.param$species, function(x) unique(all.elm.acou.prm$Clade[all.elm.acou.prm$species == x]))

agg.cmplx.param.hmm <- agg.cmplx.param <- aggregate(frmla.cmplx, songs.complx.param, mean)

# rename hummers
agg.elm.param$Clade <- ifelse(agg.elm.param$Clade %in% c("Nightjars", "Swifts"), agg.elm.param$Clade, "Hummingbirds")

agg.sng.param$Clade <- ifelse(agg.sng.param$Clade %in% c("Nightjars", "Swifts"), agg.sng.param$Clade, "Hummingbirds")

agg.cmplx.param$Clade <- ifelse(agg.cmplx.param$Clade %in% c("Nightjars", "Swifts"), agg.cmplx.param$Clade, "Hummingbirds")

# MRCAs for major clades
major.clade.nodes <- sapply(c("Nightjars", "Swifts", "Hummingbirds"), function(x) getMRCA(phy = hmm.swft.cpr.tree, tip = agg.elm.param$species[agg.elm.param$Clade == x]))

# remove no hummingbirds
agg.elm.param.hmm <- agg.elm.param.hmm[!agg.elm.param.hmm$Clade %in% c("Swifts", "Nightjars", "Patagona"), ]

agg.sng.param.hmm <- agg.sng.param.hmm[!agg.sng.param.hmm$Clade %in% c("Swifts", "Nightjars", "Patagona"), ]

agg.cmplx.param.hmm <- agg.cmplx.param.hmm[!agg.cmplx.param.hmm$Clade %in% c("Swifts", "Nightjars", "Patagona"), ]

# hummingbirds only tree
hmm.tree <- drop.tip(hmm.swft.cpr.tree, tip = setdiff(agg.elm.param$species, agg.elm.param.hmm$species))

# MRCAs for hummingbird subclade (excluding Patagona)
hmm.clade.nodes <- sapply(unique(agg.elm.param.hmm$Clade[agg.elm.param.hmm$Clade != "Patagona"]), function(x) getMRCA(phy = hmm.tree, tip = agg.elm.param.hmm$species[agg.elm.param.hmm$Clade == x]))

hmm.clade.nodes <- hmm.clade.nodes[order(names(hmm.clade.nodes))]

# base ggtree graph major clades  
gg.maj.clades <- ggtree(hmm.swft.cpr.tree, ladderize = FALSE) +
  theme_tree2() + 
  theme(text=element_text(size = 20))

# add color boxes
    for(i in 1:length(gg.maj.clades))
  gg.maj.clades <- gg.maj.clades + geom_hilight(node = major.clade.nodes[i], fill = cols[c(3, 6 ,9)][i]) 


# base ggtree graph hummingbird clades  
gg.hmm.clades <- ggtree(hmm.tree, ladderize = FALSE) +
  theme_tree2() + 
  theme(text=element_text(size = 20))
  
# color clades
  for(i in 1:length(hmm.clade.nodes))
  gg.hmm.clades <- gg.hmm.clades + geom_hilight(node = hmm.clade.nodes[i], fill = cols[i + 2]) 

# tree with 3 tips for the 3 major clades
major.clade.collapse.tree <- drop.tip(hmm.swft.cpr.tree, tip = setdiff(hmm.swft.cpr.tree$tip.label, agg.elm.param$species[!duplicated(agg.elm.param$Clade)]))

# rename tips
major.clade.collapse.tree$tip.label <- c("Nightjars", "Swifts", "Hummingbirds")

# base ggtree graph major clades  
gg.major.clade.collapse.tree <- ggtree(major.clade.collapse.tree, ladderize = FALSE) +
  theme_tree2() + 
  theme(text=element_text(size = 20))

# add colors to tips
 for(i in 1:Ntip(major.clade.collapse.tree))
  gg.major.clade.collapse.tree <- gg.major.clade.collapse.tree + geom_hilight(node = i, fill = cols[c(3 ,6, 9)][i]) 

gg.major.clade.collapse.tree <- gg.major.clade.collapse.tree +
  geom_label(aes(label = label), hjust = 1) 

### tree with 8  tips for hummer clades
hmm.clade.collapse.tree <- drop.tip(hmm.swft.cpr.tree, tip = setdiff(hmm.swft.cpr.tree$tip.label, agg.elm.param.hmm$species[!duplicated(agg.elm.param.hmm$Clade)]))

# rename tips
hmm.clade.collapse.tree$tip.label <- c("Hermits", "Topazes", "Mangoes", "Emeralds", "Mtn. Gems", "Bees", "Brilliants", "Coquettes")

# base ggtree graph major clades  
gg.hmm.clade.collapse.tree <- ggtree(hmm.clade.collapse.tree, ladderize = FALSE) +
  theme_tree2() + 
  theme(text=element_text(size = 20))

x <- 1
# add colors to tips
  for(i in order(hmm.clade.collapse.tree$tip.label, decreasing = FALSE))
  { gg.hmm.clade.collapse.tree <- gg.hmm.clade.collapse.tree + geom_hilight(node = i, fill = cols[3:10][x]) 
x <- x + 1
  }

## add tip labels
gg.hmm.clade.collapse.tree <- gg.hmm.clade.collapse.tree +
  geom_label(aes(label = label), hjust = 1) 

```

# Element acoustic parameters
```{r element acoustic parameters, eval = TRUE, echo = TRUE, message=FALSE, warning = FALSE}

for(w in names(agg.elm.param)[-c(1, 2)]){

  print(w)
  
  # major clades
  gg.elm.prm <- gg.maj.clades
  gg.elm.prm <- facet_plot(gg.elm.prm, panel= w, data = agg.elm.param, geom = geom_point, aes(x = get(w), color =  Clade))  +
  scale_color_manual(values = cols[c(3, 9, 6)]) + 
    theme(legend.position = c(.15,.8), legend.background = element_rect(fill = "transparent"))
  
  # hummingbird clades
  gg.elm.prm.hmm <- gg.hmm.clades
  gg.elm.prm.hmm <- facet_plot(gg.elm.prm.hmm, panel = w, data = agg.elm.param.hmm, geom=geom_point, aes(x= get(w), color =  Clade))  +
  scale_color_manual(values = cols[c(3:10)]) +
    theme(legend.position = c(.1,.8),   legend.background = element_rect(fill = "transparent"))
  
### add violin plots  
  # major clades  
 # rename to avoid overwritting 
  gg.elm.prm.maj.clds <- gg.major.clade.collapse.tree
  agg.elm.param.maj.clds <- agg.elm.param
  
  # change species name
  agg.elm.param.maj.clds$species <- agg.elm.param.maj.clds$Clade
  
  # add facet violin
  gg.elm.prm.maj.clds <- facet_plot(gg.elm.prm.maj.clds, panel = w, data = agg.elm.param.maj.clds, geom = geom_violin, aes(x= get(w), group = label), fill = adjustcolor("gray", alpha.f = 0.5))  +
    theme(legend.position = c(.1,.9), legend.background = element_rect(fill = "transparent"))
  
  # hummingbird clades  
 # rename to avoid overwritting 
  gg.elm.prm.hmm.clds <- gg.hmm.clade.collapse.tree
  agg.elm.param.hmm.clds <- agg.elm.param.hmm
  
  # change species name
  agg.elm.param.hmm.clds$species <- agg.elm.param.hmm.clds$Clade
  
  # add facet violin
  gg.elm.prm.hmm.clds <- facet_plot(gg.elm.prm.hmm.clds, panel = w, data = agg.elm.param.hmm.clds, geom = geom_violin, aes(x= get(w), group = label), fill = adjustcolor("gray", alpha.f = 0.5))  +
    theme(legend.position = "none", legend.background = element_rect(fill = "transparent"))
  
 # plot both together
  print(plot_grid(gg.elm.prm, gg.elm.prm.hmm, gg.elm.prm.maj.clds, gg.elm.prm.hmm.clds, ncol = 2)) 

}

```

# Song acoustic parameters
```{r song acoustic parameters, eval = TRUE, echo = TRUE, message=FALSE, warning = FALSE}

for(w in names(agg.sng.param)[-c(1, 2)]){

  print(w)
  
  # major clades
  gg.sng.prm <- gg.maj.clades
  gg.sng.prm <- facet_plot(gg.sng.prm, panel= w, data = agg.sng.param, geom = geom_point, aes(x = get(w), color =  Clade))  +
  scale_color_manual(values = cols[c(3, 9, 6)]) + 
    theme(legend.position = c(.15,.8), legend.background = element_rect(fill = "transparent"))
  
  # hummingbird clades
  gg.sng.prm.hmm <- gg.hmm.clades
  gg.sng.prm.hmm <- facet_plot(gg.sng.prm.hmm, panel = w, data = agg.sng.param.hmm, geom=geom_point, aes(x= get(w), color =  Clade))  +
  scale_color_manual(values = cols[c(3:10)]) +
    theme(legend.position = c(.1,.8),   legend.background = element_rect(fill = "transparent"))
 
### add violin plots  
  # major clades  
 # rename to avoid overwritting 
  gg.sng.prm.maj.clds <- gg.major.clade.collapse.tree
  agg.sng.param.maj.clds <- agg.sng.param
  
  # change species name
  agg.sng.param.maj.clds$species <- agg.sng.param.maj.clds$Clade
  
  # add facet violin
  gg.sng.prm.maj.clds <- facet_plot(gg.sng.prm.maj.clds, panel = w, data = agg.sng.param.maj.clds, geom = geom_violin, aes(x= get(w), group = label), fill = adjustcolor("gray", alpha.f = 0.5))  +
    theme(legend.position = c(.1,.9), legend.background = element_rect(fill = "transparent"))
  
  # hummingbird clades  
 # rename to avoid overwritting 
  gg.sng.prm.hmm.clds <- gg.hmm.clade.collapse.tree
  agg.sng.param.hmm.clds <- agg.sng.param.hmm
  
  # change species name
  agg.sng.param.hmm.clds$species <- agg.sng.param.hmm.clds$Clade
  
  # add facet violin
  gg.sng.prm.hmm.clds <- facet_plot(gg.sng.prm.hmm.clds, panel = w, data = agg.sng.param.hmm.clds, geom = geom_violin, aes(x= get(w), group = label), fill = adjustcolor("gray", alpha.f = 0.5))  +
    theme(legend.position = "none", legend.background = element_rect(fill = "transparent"))
  
 # plot both together
  print(plot_grid(gg.sng.prm, gg.sng.prm.hmm, gg.sng.prm.maj.clds, gg.sng.prm.hmm.clds, ncol = 2))   
  
  }

```

# Song complexity parameters
```{r song complexity parameters, eval = TRUE, echo = TRUE, message=FALSE, warning = FALSE}

for(w in names(agg.cmplx.param)[-c(1, 2)]){

  print(w)
  
  # major clades
  gg.cmplx.prm <- gg.maj.clades
  gg.cmplx.prm <- facet_plot(gg.cmplx.prm, panel= w, data = agg.cmplx.param, geom = geom_point, aes(x = get(w), color =  Clade))  +
  scale_color_manual(values = cols[c(3, 9, 6)]) + 
    theme(legend.position = c(.15,.8), legend.background = element_rect(fill = "transparent"))
  
  # hummingbird clades
  gg.cmplx.prm.hmm <- gg.hmm.clades
  gg.cmplx.prm.hmm <- facet_plot(gg.cmplx.prm.hmm, panel = w, data = agg.cmplx.param.hmm, geom=geom_point, aes(x= get(w), color =  Clade))  +
  scale_color_manual(values = cols[c(3:10)]) +
    theme(legend.position = c(.1,.8),   legend.background = element_rect(fill = "transparent"))
  
### add violin plots  
  # major clades  
 # rename to avoid overwritting 
  gg.sng.cmplx.maj.clds <- gg.major.clade.collapse.tree
  agg.sng.cmplx.maj.clds <- agg.cmplx.param
  
  # change species name
  agg.sng.cmplx.maj.clds$species <- agg.sng.cmplx.maj.clds$Clade
  
  # add facet violin
  gg.sng.cmplx.maj.clds <- facet_plot(gg.sng.cmplx.maj.clds, panel = w, data = agg.sng.cmplx.maj.clds, geom = geom_violin, aes(x= get(w), group = label), fill = adjustcolor("gray", alpha.f = 0.5))  +
    theme(legend.position = c(.1,.9), legend.background = element_rect(fill = "transparent"))
  
  # hummingbird clades  
 # rename to avoid overwritting 
  gg.sng.cmplx.hmm.clds <- gg.hmm.clade.collapse.tree
  agg.sng.cmplx.hmm.clds <- agg.cmplx.param.hmm
  
  # change species name
  agg.sng.cmplx.hmm.clds$species <- agg.sng.cmplx.hmm.clds$Clade
  
  # add facet violin
  gg.sng.cmplx.hmm.clds <- facet_plot(gg.sng.cmplx.hmm.clds, panel = w, data = agg.sng.cmplx.hmm.clds, geom = geom_violin, aes(x= get(w), group = label), fill = adjustcolor("gray", alpha.f = 0.5))  +
    theme(legend.position = "none", legend.background = element_rect(fill = "transparent"))
  
 # plot both together
  print(plot_grid(gg.cmplx.prm, gg.cmplx.prm.hmm, gg.sng.cmplx.maj.clds, gg.sng.cmplx.hmm.clds, ncol = 2))   
  
}

```


---

<font size="4">R session information</font>

```{r session info, echo=F}

sessionInfo()

```